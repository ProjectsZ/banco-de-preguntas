/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

/* Core CSS required for Ionic components to work properly */
@import "@ionic/angular/css/core.css";

/* Basic CSS for apps built with Ionic */
@import "@ionic/angular/css/normalize.css";
@import "@ionic/angular/css/structure.css";
@import "@ionic/angular/css/typography.css";
@import "@ionic/angular/css/display.css";

/* Optional CSS utils that can be commented out */
@import "@ionic/angular/css/padding.css";
@import "@ionic/angular/css/float-elements.css";
@import "@ionic/angular/css/text-alignment.css";
@import "@ionic/angular/css/text-transformation.css";
@import "@ionic/angular/css/flex-utils.css";

/**
 * Ionic Dark Mode
 * -----------------------------------------------------
 * For more info, please see:
 * https://ionicframework.com/docs/theming/dark-mode
 */

/* @import "@ionic/angular/css/palettes/dark.always.css"; */
/* @import "@ionic/angular/css/palettes/dark.class.css"; */
// @import '@ionic/angular/css/palettes/dark.system.css';


/* Reset global styles */
*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: inherit;
  font-size: inherit;
  vertical-align: baseline;
}

/* Resetea los estilos predeterminados de los elementos de texto */
body {
  line-height: 1;
  text-rendering: optimizeLegibility;
}

/* Evita la decoración en enlaces */
a {
  text-decoration: none;
  color: inherit;
}

/* Desactiva los bordes de las imágenes */
img {
  border: 0;
  max-width: 100%;
  height: auto;
}

/* Asegúrate de que todos los elementos de formulario sean consistentes */
input,
select,
textarea,
button {
  outline: none;
  border: none;
  background: transparent;
}

/* Asegúrate de que las listas no tengan viñetas o márgenes */
ul,
ol {
  list-style: none;
}

h5,h3{
    margin: 0;
    padding: 0;
}

.errorMessage{
  font-size: small;
}

.position-center{
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.txt{
  ion-label, ion-text{
    opacity: 0.7;
  }
}

.img-container{
  width: 100%;
  height: 150px;
  overflow-y: auto;
}
.question-image{
    border-radius: 10px;
    transition: transform 0.3s;
    object-position: center;
    object-fit: cover;
}

.image-zoom {
  padding: 0;
  height: 40vh;
  overflow-x: auto;
  overflow-y: auto;

  .image-inner {
    display: inline-block; // importante para scroll
  }

  img {
    width: auto;
    height: auto;
    max-width: none; // evita que se limite por el contenedor
    max-height: none;
    display: block;
  }
}
.top-chip{
  position: absolute;
  top: 0;
  left: 10px;
  z-index: 1;
  margin-left: 1rem;

  ion-chip{
    font-size: 0.8rem;
    padding: 0.2rem 0.5rem;
    margin: 0.5rem;
    border-radius: 10px;
    font-weight: 700;
    height: 24px;
  }
}



.flex{
  display: flex;

  &.center{
    justify-content: center;
    align-items: center;
  }

  &.justify{
    justify-content: space-between;
  }

  &.end{
    justify-content: flex-end;
  }

  &.around{
    justify-content: space-around;
  }
  &.between{
    justify-content: space-between;
  }

  &.wrap{
    flex-wrap: wrap;
  }
}

.text-yellow{
  background: #FFEB3B;
  color: var(--ion-color-primary);
}

.text-orange{
  background: #FFDA6E;
  color: var(--ion-color-primary);
}

.disabled{
  pointer-events: none;
  opacity: 0.3;
}


.toast-modal{
  height: 8rem;
  --background: transparent;
}

.txt-error{
  margin-top: -0.6rem;
  font-size: 0.77em;
  margin-bottom: 1rem;
  padding: 0;
}


.errorPass{
  position: relative;
  
  ul{
    position: absolute;
  }

  ion-text{
    margin-top: 0;
    position: absolute;
    top: 0;
    left: 0;
    margin: 0;
    width: 100%;
    margin-top: -1.2rem;
    z-index: 2;
    
    li{
      margin: 0;
      text-align: start;
      font-weight: 700;
      font-size: 0.64rem;
    }
  }
}


/* En tu archivo global.scss o componente.scss */
.small-modal {
  --width: 100vw; /* Ajusta el ancho deseado */
  --height: 40vh; /* Ajusta la altura deseada */

  --max-width: 90%;
  --border-radius: 16px;
  --background: #ffffff;

  &.img-modal{
    --background: transparent;
  }
    
    .checkbox-list {
      max-height: 20vh; /* Altura máxima con scroll automático */
      overflow-y: auto;
    }
    
    .header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 16px;

      h2 {
          font-size: 1.2rem;
          margin: 0;
      }

      ion-icon {
          font-size: 24px;
          cursor: pointer;
      }

    }
    ion-item{
      ion-label{
          margin-left: 0.4rem;
      }
    }
    .new-list-button {
      margin-top: 20px;
      --border-radius: 20px;
      width: 100%;
    }
}
